# GitLab CI/CD configuration file
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# Build from  template at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: node:12.22.7

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'

stages:          # List of stages for jobs, and their order of execution
  - install_dependencies
  - build
  - test
  - deploy


  
install_dependencies:
  stage: install_dependencies
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
  script:
    - npm i --legacy-peer-deps --progress=false
  only:
    changes:
      - package-lock.json

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  script:
    - echo "Compiling the code..."
    - npm run build
    - echo "Compile complete."
  artifacts:
    paths:
      - build

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 1
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

pages:            # This job runs in the deploy stage.
  stage: deploy   # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - cp -af build/* public/
    - echo "Application successfully deployed."
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'

